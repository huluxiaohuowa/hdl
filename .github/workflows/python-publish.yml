name: Build and Publish to PyPI

on:
  push:
    tags:
      - '*'  # 监听所有标签推送

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # 确保能够获取全部历史和标签

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel build

      - name: Build package and wheel
        run: |
          python -m build --wheel
      
      - name: Find wheel file
        run: echo "WHEEL_FILE=$(basename $(ls ./dist/*.whl))" >> $GITHUB_ENV
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Create GitHub Release
        id: create_release  # 这里添加 id 以便于引用输出
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: "Description of the release"
          draft: false
          prerelease: false
  
      - name: Upload wheel to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/${{ env.WHEEL_FILE }}
          asset_name: ${{ env.WHEEL_FILE }}
          asset_content_type: application/octet-stream